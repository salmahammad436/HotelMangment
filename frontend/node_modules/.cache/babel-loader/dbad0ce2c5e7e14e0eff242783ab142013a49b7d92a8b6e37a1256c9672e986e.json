{"ast":null,"code":"const API_KEY = '67d0875938d0825a40cc632d';\nconst BASE_URL = 'https://api.makcorps.com';\nimport axios from 'axios';\nexport const findCity = async name => {\n  try {\n    const response = await axios.get(`${BASE_URL}/mapping`, {\n      params: {\n        'API_KEY': `${API_KEY}`,\n        name\n      }\n    });\n    console.log('City search response:', response.data);\n\n    // Check if the response data is in the expected format\n    if (response.data && Array.isArray(response.data)) {\n      return response.data;\n    } else {\n      console.warn('Unexpected response format:', response.data);\n      return [];\n    }\n  } catch (error) {\n    console.log('Error while fetching cities:', error);\n    throw error;\n  }\n};\nexport const searchHotels = async (cityId, checkin, checkout, adults, children, pagination = 1, currency = 'USD') => {\n  try {\n    const response = await axios.get(`${BASE_URL}/city`, {\n      params: {\n        'API_KEY': '67d0875938d0825a40cc632d',\n        cityid: cityId,\n        checkin,\n        checkout,\n        adults,\n        pagination,\n        cur: currency,\n        rooms: 1\n      },\n      headers: {\n        'API_KEY': '67d0875938d0825a40cc632d'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_KEY","BASE_URL","axios","findCity","name","response","get","params","console","log","data","Array","isArray","warn","error","searchHotels","cityId","checkin","checkout","adults","children","pagination","currency","cityid","cur","rooms","headers"],"sources":["/Users/salma/Desktop/frontendTask/frontend/src/services/api.tsx"],"sourcesContent":["\nimport { City, Hotel } from '../types/index'\n\n\n\nconst API_KEY = '67d0875938d0825a40cc632d';\nconst BASE_URL = 'https://api.makcorps.com';\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\nexport const findCity = async (name: string): Promise<City[]> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/mapping`, {\n            params: {\n                'API_KEY': `${API_KEY}`,\n                name\n            }\n        });\n\n        console.log('City search response:', response.data);\n\n        // Check if the response data is in the expected format\n        if (response.data && Array.isArray(response.data)) {\n            return response.data\n        } else {\n            console.warn('Unexpected response format:', response.data);\n            return [];\n        }\n\n    } catch (error) {\n        console.log('Error while fetching cities:', error);\n        throw error;\n    }\n};\n\n\nexport const searchHotels = async (cityId: number,\n    checkin: string,\n    checkout: string,\n    adults: number,\n    children: number,\n    pagination: number = 1,\n    currency: string = 'USD'): Promise<Hotel[]> => {\n    try {\n\n        const response = await axios.get(`${BASE_URL}/city`, {\n            params: {\n                'API_KEY': '67d0875938d0825a40cc632d',\n                cityid: cityId,\n                checkin,\n                checkout,\n                adults,\n                pagination,\n                cur: currency,\n                rooms: 1\n            },\n            headers: { 'API_KEY': '67d0875938d0825a40cc632d' }\n        })\n        return response.data\n    } catch (error) {\n        console.log(error);\n        throw error;\n\n    }\n} "],"mappings":"AAKA,MAAMA,OAAO,GAAG,0BAA0B;AAC1C,MAAMC,QAAQ,GAAG,0BAA0B;AAI3C,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAY,IAAsB;EAC7D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGL,QAAQ,UAAU,EAAE;MACpDM,MAAM,EAAE;QACJ,SAAS,EAAE,GAAGP,OAAO,EAAE;QACvBI;MACJ;IACJ,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;;IAEnD;IACA,IAAIL,QAAQ,CAACK,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACP,QAAQ,CAACK,IAAI,CAAC,EAAE;MAC/C,OAAOL,QAAQ,CAACK,IAAI;IACxB,CAAC,MAAM;MACHF,OAAO,CAACK,IAAI,CAAC,6BAA6B,EAAER,QAAQ,CAACK,IAAI,CAAC;MAC1D,OAAO,EAAE;IACb;EAEJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZN,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEK,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAc,EAC7CC,OAAe,EACfC,QAAgB,EAChBC,MAAc,EACdC,QAAgB,EAChBC,UAAkB,GAAG,CAAC,EACtBC,QAAgB,GAAG,KAAK,KAAuB;EAC/C,IAAI;IAEA,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGL,QAAQ,OAAO,EAAE;MACjDM,MAAM,EAAE;QACJ,SAAS,EAAE,0BAA0B;QACrCgB,MAAM,EAAEP,MAAM;QACdC,OAAO;QACPC,QAAQ;QACRC,MAAM;QACNE,UAAU;QACVG,GAAG,EAAEF,QAAQ;QACbG,KAAK,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QAAE,SAAS,EAAE;MAA2B;IACrD,CAAC,CAAC;IACF,OAAOrB,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IAClB,MAAMA,KAAK;EAEf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}