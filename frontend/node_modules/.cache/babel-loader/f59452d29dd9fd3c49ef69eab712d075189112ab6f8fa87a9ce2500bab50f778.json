{"ast":null,"code":"var _jsxFileName = \"/Users/salma/Desktop/frontendTask/frontend/src/components/CitySearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySearch = ({\n  onSelectCity\n}) => {\n  _s();\n  const [destination, setDestination] = useState('');\n  const [cityResults, setCityResults] = useState([]);\n  const fetchCityId = async destination => {\n    try {\n      const response = await axios.get('https://api.makcorps.com/mapping', {\n        params: {\n          api_key: '67d0875938d0825a40cc632d',\n          name: destination\n        }\n      });\n      setCityResults(response.data);\n    } catch (error) {\n      console.error('Error fetching city IDs:', error);\n    }\n  };\n\n  // Function to handle the search button click\n  const handleSearch = () => {\n    if (destination.trim()) {\n      fetchCityId(destination);\n    } else {\n      alert('Please enter a destination.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter destination\",\n      value: destination,\n      onChange: e => setDestination(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), cityResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cityResults.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onSelectCity(city.document_id),\n            children: [city.name, \" - \", city.details.parent_name, \", \", city.details.grandparent_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, city.document_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySearch, \"OO7x32IQjkb1jOzsi5fOHGoDM/8=\");\n_c = CitySearch;\nexport default CitySearch;\nvar _c;\n$RefreshReg$(_c, \"CitySearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CitySearch","onSelectCity","_s","destination","setDestination","cityResults","setCityResults","fetchCityId","response","get","params","api_key","name","data","error","console","handleSearch","trim","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","city","document_id","details","parent_name","grandparent_name","_c","$RefreshReg$"],"sources":["/Users/salma/Desktop/frontendTask/frontend/src/components/CitySearch.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface CityResult {\n  document_id: string; // This is the City ID\n  name: string; // Name of the city or hotel\n  details: {\n    parent_name: string; // City name\n    grandparent_name: string;\n  };\n}\n\ninterface CitySearchProps {\n  onSelectCity: (cityId: string) => void; // Callback to pass the selected City ID to the parent\n}\n\nconst CitySearch: React.FC<CitySearchProps> = ({ onSelectCity }) => {\n  const [destination, setDestination] = useState('');\n  const [cityResults, setCityResults] = useState<CityResult[]>([]);\n\n\n  const fetchCityId = async (destination: string) => {\n    try {\n      const response = await axios.get('https://api.makcorps.com/mapping', {\n        params: {\n          api_key: '67d0875938d0825a40cc632d', \n          name: destination, \n        },\n      });\n      setCityResults(response.data); \n    } catch (error) {\n      console.error('Error fetching city IDs:', error);\n    }\n  };\n\n  // Function to handle the search button click\n  const handleSearch = () => {\n    if (destination.trim()) {\n      fetchCityId(destination); \n    } else {\n      alert('Please enter a destination.');\n    }\n  };\n\n  return (\n    <div>\n      {/* Input for the destination */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter destination\"\n        value={destination}\n        onChange={(e) => setDestination(e.target.value)}\n      />\n\n      {/* Search button */}\n      <button onClick={handleSearch}>Search</button>\n\n      {/* Display the list of cities */}\n      {cityResults.length > 0 && (\n        <div>\n          <h3>Select a City:</h3>\n          <ul>\n            {cityResults.map((city) => (\n              <li key={city.document_id}>\n                <button onClick={() => onSelectCity(city.document_id)}>\n                  {city.name} - {city.details.parent_name}, {city.details.grandparent_name}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CitySearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}