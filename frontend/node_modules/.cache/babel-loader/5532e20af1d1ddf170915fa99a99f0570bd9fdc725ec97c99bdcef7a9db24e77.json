{"ast":null,"code":"var _jsxFileName = \"/Users/salma/Desktop/frontendTask/frontend/src/components/hotelResult/HotelCard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HotelCard = ({\n  hotel\n}) => {\n  var _s = $RefreshSig$();\n  // return (\n  //   <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n  //     {/* Hotel Image - Using a placeholder */}\n  //     <div className=\"h-48 bg-gray-300 flex items-center justify-center\">\n  //       <span className=\"text-gray-500\">Hotel Image</span>\n  //     </div>\n\n  //     <div className=\"p-4\">\n  //       <h3 className=\"text-xl font-bold mb-2\">{hotel.name}</h3>\n\n  //       {/* Rating */}\n  //       {hotel.reviews && (\n  //         <div className=\"flex items-center mb-2\">\n  //           <div className=\"flex text-yellow-400\">\n  //             {[...Array(5)].map((_, i) => (\n  //               <svg \n  //                 key={i} \n  //                 className={`w-5 h-5 ${i < Math.floor(hotel.reviews.rating) ? 'text-yellow-400' : 'text-gray-300'}`} \n  //                 fill=\"currentColor\" \n  //                 viewBox=\"0 0 20 20\"\n  //               >\n  //                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n  //               </svg>\n  //             ))}\n  //           </div>\n  //           <span className=\"ml-2 text-gray-600\">\n  //             {hotel.reviews.rating} ({hotel.reviews.count} reviews)\n  //           </span>\n  //         </div>\n  //       )}\n\n  //       {/* Location */}\n  //       <div className=\"flex items-center mb-3\">\n  //         <svg className=\"h-5 w-5 text-gray-500 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n  //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n  //         </svg>\n  //         <span className=\"text-gray-600\">\n  //           {hotel.geocode ? `${hotel.geocode.latitude}, ${hotel.geocode.longitude}` : 'Location not available'}\n  //         </span>\n  //       </div>\n\n  //       {/* Price */}\n  //       <div className=\"mt-4 flex justify-between items-center\">\n  //         <div>\n  //           <span className=\"text-gray-600\">Price:</span>\n  //           <span className=\"ml-2 text-xl font-bold\">\n  //             {hotel.price1 ? `$${hotel.price1}` : 'Price not available'}\n  //           </span>\n  //           <span className=\"text-sm text-gray-500\">/night</span>\n  //         </div>\n\n  //         <button className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">\n  //           View Details\n  //         </button>\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n\n  function HotelsList() {\n    _s();\n    const [hotels, setHotels] = useState([]);\n    useEffect(() => {\n      const url = 'https://api.makcorps.com/mapping';\n      const params = {\n        api_key: '67d0875938d0825a40cc632d',\n        name: 'the lenox'\n      };\n      axios.get(url, {\n        params\n      }).then(response => {\n        setHotels(response.data);\n      }).catch(error => {\n        console.error(`Error: ${error.message}`);\n      });\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hotel List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: hotel.details.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hotel.details.geo_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address: \", hotel.details.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Coordinates: \", hotel.coords]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, hotel.document_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n  _s(HotelsList, \"Gakc+Y7g9A1UZYw8Op/kyzheHeo=\");\n};\n_c = HotelCard;\nexport default HotelCard;\nvar _c;\n$RefreshReg$(_c, \"HotelCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HotelCard","hotel","_s","$RefreshSig$","HotelsList","hotels","setHotels","useState","useEffect","url","params","api_key","name","axios","get","then","response","data","catch","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","details","geo_name","address","coords","document_id","_c","$RefreshReg$"],"sources":["/Users/salma/Desktop/frontendTask/frontend/src/components/hotelResult/HotelCard.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Hotel } from '../../types';\n\ninterface HotelCardProps {\n  hotel: Hotel;\n}\n\nconst HotelCard: React.FC<HotelCardProps> = ({ hotel }) => {\n  // return (\n  //   <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n  //     {/* Hotel Image - Using a placeholder */}\n  //     <div className=\"h-48 bg-gray-300 flex items-center justify-center\">\n  //       <span className=\"text-gray-500\">Hotel Image</span>\n  //     </div>\n      \n  //     <div className=\"p-4\">\n  //       <h3 className=\"text-xl font-bold mb-2\">{hotel.name}</h3>\n        \n  //       {/* Rating */}\n  //       {hotel.reviews && (\n  //         <div className=\"flex items-center mb-2\">\n  //           <div className=\"flex text-yellow-400\">\n  //             {[...Array(5)].map((_, i) => (\n  //               <svg \n  //                 key={i} \n  //                 className={`w-5 h-5 ${i < Math.floor(hotel.reviews.rating) ? 'text-yellow-400' : 'text-gray-300'}`} \n  //                 fill=\"currentColor\" \n  //                 viewBox=\"0 0 20 20\"\n  //               >\n  //                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n  //               </svg>\n  //             ))}\n  //           </div>\n  //           <span className=\"ml-2 text-gray-600\">\n  //             {hotel.reviews.rating} ({hotel.reviews.count} reviews)\n  //           </span>\n  //         </div>\n  //       )}\n        \n  //       {/* Location */}\n  //       <div className=\"flex items-center mb-3\">\n  //         <svg className=\"h-5 w-5 text-gray-500 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n  //           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n  //         </svg>\n  //         <span className=\"text-gray-600\">\n  //           {hotel.geocode ? `${hotel.geocode.latitude}, ${hotel.geocode.longitude}` : 'Location not available'}\n  //         </span>\n  //       </div>\n        \n  //       {/* Price */}\n  //       <div className=\"mt-4 flex justify-between items-center\">\n  //         <div>\n  //           <span className=\"text-gray-600\">Price:</span>\n  //           <span className=\"ml-2 text-xl font-bold\">\n  //             {hotel.price1 ? `$${hotel.price1}` : 'Price not available'}\n  //           </span>\n  //           <span className=\"text-sm text-gray-500\">/night</span>\n  //         </div>\n          \n  //         <button className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">\n  //           View Details\n  //         </button>\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n\n\n\n  function HotelsList() {\n    const [hotels, setHotels] = useState([]);\n\n    useEffect(() => {\n        const url = 'https://api.makcorps.com/mapping';\n        const params = {\n            api_key: '67d0875938d0825a40cc632d',\n            name: 'the lenox'\n        };\n\n        axios.get(url, { params })\n            .then(response => {\n                setHotels(response.data);\n            })\n            .catch(error => {\n                console.error(`Error: ${error.message}`);\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2>Hotel List</h2>\n            <ul>\n                {hotels.map((hotel) => (\n                    <li key={hotel.document_id}>\n                        <h3>{hotel.details.name}</h3>\n                        <p>Location: {hotel.details.geo_name}</p>\n                        <p>Address: {hotel.details.address}</p>\n                        <p>Coordinates: {hotel.coords}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\n\n};\n\nexport default HotelCard;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACzD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,SAASC,UAAUA,CAAA,EAAG;IAAAF,EAAA;IACpB,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;IAExCC,SAAS,CAAC,MAAM;MACZ,MAAMC,GAAG,GAAG,kCAAkC;MAC9C,MAAMC,MAAM,GAAG;QACXC,OAAO,EAAE,0BAA0B;QACnCC,IAAI,EAAE;MACV,CAAC;MAEDC,KAAK,CAACC,GAAG,CAACL,GAAG,EAAE;QAAEC;MAAO,CAAC,CAAC,CACrBK,IAAI,CAACC,QAAQ,IAAI;QACdV,SAAS,CAACU,QAAQ,CAACC,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,UAAUA,KAAK,CAACE,OAAO,EAAE,CAAC;MAC5C,CAAC,CAAC;IACV,CAAC,EAAE,EAAE,CAAC;IAEN,oBACItB,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB3B,OAAA;QAAAuB,QAAA,EACKjB,MAAM,CAACsB,GAAG,CAAE1B,KAAK,iBACdF,OAAA;UAAAuB,QAAA,gBACIvB,OAAA;YAAAuB,QAAA,EAAKrB,KAAK,CAAC2B,OAAO,CAAChB;UAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B3B,OAAA;YAAAuB,QAAA,GAAG,YAAU,EAACrB,KAAK,CAAC2B,OAAO,CAACC,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzC3B,OAAA;YAAAuB,QAAA,GAAG,WAAS,EAACrB,KAAK,CAAC2B,OAAO,CAACE,OAAO;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvC3B,OAAA;YAAAuB,QAAA,GAAG,eAAa,EAACrB,KAAK,CAAC8B,MAAM;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAJ7BzB,KAAK,CAAC+B,WAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKtB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEd;EAACxB,EAAA,CAlCUE,UAAU;AAqCrB,CAAC;AAAC6B,EAAA,GApGIjC,SAAmC;AAsGzC,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}